cmake_minimum_required(VERSION 3.10)
project(cpp_csp)

IF(MSVC)
	set(LIB_FILES "")
ENDIF()

IF(NOT MSVC)
	set(LIB_FILES "pthread")
ENDIF()

set(CMAKE_CXX_STANDARD 17)
set(Boost_USE_STATIC_LIBS OFF)
set(Boost_USE_MULTITHREADED ON)
set(Boost_USE_STATIC_RUNTIME OFF)
find_package(Boost COMPONENTS context fiber)
link_libraries(${Boost_LIBRARIES})

add_executable(commstime1 demos/commstime1.cpp)
target_link_libraries(commstime1 ${LIB_FILES})
add_executable(commstime2 demos/commstime2.cpp)
target_link_libraries(commstime2 ${LIB_FILES})
add_executable(commstime3 demos/commstime3.cpp)
target_link_libraries(commstime3 ${LIB_FILES})
add_executable(commstime4 demos/commstime4.cpp)
target_link_libraries(commstime4 ${LIB_FILES})
add_executable(commstime5 demos/commstime5.cpp)
target_link_libraries(commstime5 ${LIB_FILES})
add_executable(commstime6 demos/commstime6.cpp)
target_link_libraries(commstime6 ${LIB_FILES})
add_executable(busy_commstime demos/busy_commstime.cpp)
target_link_libraries(busy_commstime ${LIB_FILES})
add_executable(busy_commstime2 demos/busy_commstime2.cpp)
target_link_libraries(busy_commstime2 ${LIB_FILES})
add_executable(fiber_commstime1 demos/fiber_commstime1.cpp)
target_link_libraries(fiber_commstime1 ${LIB_FILES})
add_executable(stressed_alt demos/stressedalt.cpp)
target_link_libraries(stressed_alt ${LIB_FILES})
add_executable(busy_stressedalt demos/busy_stressedalt.cpp)
target_link_libraries(busy_stressedalt ${LIB_FILES})
add_executable(monte_carlo_pi demos/montecarlopi.cpp)
target_link_libraries(monte_carlo_pi ${LIB_FILES})
add_executable(mandelbrot1 demos/mandelbrot1.cpp)
target_link_libraries(mandelbrot1 ${LIB_FILES})
add_executable(mandelbrot2 demos/mandelbrot2.cpp)
target_link_libraries(mandelbrot2 ${LIB_FILES})
add_executable(mandelbrot3 demos/mandelbrot3.cpp)
target_link_libraries(mandelbrot3 ${LIB_FILES})
add_executable(diningphil demos/diningphil.cpp)
target_link_libraries(diningphil ${LIB_FILES})
add_executable(test_atomic_alt demos/test_atomic_alt.cpp)
target_link_libraries(test_atomic_alt ${LIB_FILES})
add_executable(test_busy_barrier demos/test_busy_barrier.cpp)
target_link_libraries(test_busy_barrier ${LIB_FILES})